@model ProductAddFormModel

@{
    ViewData["Title"] = "Add Product";
}

<style>
    .form-container {
        max-width: 600px;
        margin: auto;
        padding: 20px;
        border: 1px solid #ddd;
        border-radius: 5px;
        background-color: #f9f9f9;
    }

    .form-group {
        margin-bottom: 20px;
    }

    label {
        font-weight: bold;
    }

    .form-control {
        width: 100%;
        padding: 10px;
        border: 1px solid #ccc;
        border-radius: 4px;
        box-sizing: border-box;
    }

    .form-control-file {
        padding: 5px;
    }

    .text-danger {
        color: red;
    }

    .btn-primary {
        background-color: #007bff;
        color: white;
        padding: 10px 20px;
        border: none;
        border-radius: 4px;
        cursor: pointer;
    }

        .btn-primary:hover {
            background-color: #0056b3;
        }

    .header-container {
        text-align: center;
        margin-bottom: 20px;
    }

    .image-preview {
        display: flex;
        gap: 10px;
        flex-wrap: wrap;
        margin-top: 10px;
    }

    .image-container {
        position: relative;
        width: 100px;
        height: 100px;
        border-radius: 8px;
        overflow: hidden;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        transition: transform 0.3s ease;
    }

        .image-container:hover {
            transform: scale(1.05);
        }

        .image-container img {
            width: 100%;
            height: 100%;
            object-fit: cover;
        }

    .remove-btn {
        position: absolute;
        top: 5px;
        right: 5px;
        background-color: rgba(255, 0, 0, 0.7);
        color: white;
        border: none;
        cursor: pointer;
        padding: 2px 6px;
        border-radius: 50%;
        font-size: 14px;
        display: flex;
        align-items: center;
        justify-content: center;
        transition: background-color 0.2s ease;
    }

        .remove-btn:hover {
            background-color: rgba(255, 0, 0, 1);
        }
</style>

<div class="header-container">
    <h2>Add Product</h2>
</div>

<div class="form-container">
    <form asp-action="AddProduct" asp-controller="Product" method="post" enctype="multipart/form-data">
        @Html.AntiForgeryToken()

        <div class="form-group">
            <label asp-for="Name">Product Name</label>
            <input asp-for="Name" class="form-control" placeholder="Enter product name" />
            <span asp-validation-for="Name" class="text-danger"></span>
        </div>

        <div class="form-group">
            <label asp-for="Description">Description</label>
            <textarea asp-for="Description" class="form-control" placeholder="Enter product description"></textarea>
            <span asp-validation-for="Description" class="text-danger"></span>
        </div>

        <div class="form-group">
            <label asp-for="Price">Price</label>
            <input asp-for="Price" type="number" step="0.01" class="form-control" placeholder="Enter product price" />
            <span asp-validation-for="Price" class="text-danger"></span>
        </div>

        <div class="form-group">
            <label asp-for="SKU">SKU</label>
            <input asp-for="SKU" class="form-control" placeholder="Enter product SKU" />
            <span asp-validation-for="SKU" class="text-danger"></span>
        </div>

        <div class="form-group">
            <label asp-for="QuantityInStock">Quantity In Stock</label>
            <input asp-for="QuantityInStock" type="number" class="form-control" placeholder="Enter quantity in stock" />
            <span asp-validation-for="QuantityInStock" class="text-danger"></span>
        </div>

        <div class="form-group">
            <label for="Images">Images</label>
            <input asp-for="Images" type="file" class="form-control-file" id="imageUpload" multiple />
            <span asp-validation-for="Images" class="text-danger"></span>
            <div class="image-preview" id="imagePreview"></div>
        </div>

        <div class="form-group">
            <label for="PromotionId">Promotion</label>
            <select id="promotionSelect" asp-for="PromotionId" class="form-control">
                <option value="Select Promotion" selected disabled>Select Promotion</option>
                @foreach (var promotion in Model.Promotions)
                {
                    <option id="promotionId" value="@promotion.Id">@promotion.Name</option>
                }
            </select>
        </div>

        <div class="form-group">
            <label for="CategoryId">Category</label>
            <select id="categorySelect" asp-for="CategoryId" class="form-control">
                <option value="Select Category" selected disabled>Select Category</option>
                @foreach (var category in Model.Categories)
                {
                    <option id="categoryId" value="@category.Id">@category.Name</option>
                }
            </select>
        </div>

        <div id="variationOptionsContainer" class="form-group">
        </div>

        <button asp-asp-controller="Product" asp-action="Add" type="submit" class="btn btn-primary">Add Product</button>
    </form>
</div>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    $(document).ready(function () {
        // Handle any additional logic, like showing file name when image is uploaded, or category/variation filtering
    });

    $(document).ready(function () {
        // Fetch promotions via AJAX for the dropdown
        $.ajax({
            url: '@Url.Action("All", "Promotion")',
            type: 'GET',
            success: function (data) {
                var $promotionSelect = $('#promotionSelect');
                $promotionSelect.empty(); // Clear existing options
                $promotionSelect.append('<option value="" selected disabled>Select Promotion</option>');

                // Populate the dropdown with promotion options
                data.forEach(function (promotion) {
                    $promotionSelect.append('<option value="' + promotion.id + '">' + promotion.name + '</option>');
                });
            },
            error: function () {
                alert('Error fetching promotions');
            }
        });
    });


    //Images handler
    $(document).ready(function () {
        function previewImages(files) {
            const previewContainer = $('#imagePreview');
            previewContainer.empty(); // Clear the preview

            Array.from(files).forEach((file, index) => {
                const reader = new FileReader();
                reader.onload = function (e) {
                    const imgElement = $(`
                                                        <div class="image-container">
                                                            <img src="${e.target.result}" alt="Image Preview" />
                                                            <button type="button" class="remove-btn" data-index="${index}">&times;</button>
                                                        </div>
                                                    `);
                    previewContainer.append(imgElement);
                };
                reader.readAsDataURL(file);
            });
        }

        $('#imageUpload').on('change', function () {
            previewImages(this.files);
        });

        $('#imagePreview').on('click', '.remove-btn', function () {
            const index = $(this).data('index');
            const fileInput = $('#imageUpload')[0];

            // Create a new DataTransfer object to update the file list
            const dt = new DataTransfer();
            Array.from(fileInput.files).forEach((file, i) => {
                if (i !== index) dt.items.add(file);
            });
            fileInput.files = dt.files;

            // Re-preview the remaining images
            previewImages(fileInput.files);
        });
    });

    $(document).ready(function () {
        // Handle category change
        $('#categorySelect').change(function () {
            var categoryId = $(this).val(); // Get selected category ID
            if (categoryId) {
                // Make an AJAX call to fetch variations based on selected category
                $.ajax({
                    url: '/Product/GetVariationOptionsByCategory', // The URL of your backend endpoint
                    type: 'GET',
                    data: { categoryId: categoryId },
                    success: function (data) {
                        // Clear the variation options container
                        $('#variationOptionsContainer').empty();

                        data.forEach(function (variation, index) {
                            var variationDropdown = `
                                                                                                                        <div class="form-group">
                                                                                                                            <label for="variation_${variation.variationName}">${variation.variationName}</label>
                                                                                                                            <select class="form-control" id="variation_${variation.variationName}"
                                                                                                                                        name="SelectedVariationOptions[${index}].VariationOptionId">
                                                                                                                                <option value="" selected disabled>Select Option</option>`;

                            // Add options for each variation
                            variation.variationOptions.forEach(function (option) {
                                variationDropdown += `<option value="${option.variationOptionId}">${option.value}</option>`;
                            });

                            variationDropdown += `</select>
                                                                                                                                <input type="hidden" name="SelectedVariationOptions[${index}].VariationId" value="${variation.variationId}" />
                                                                                                                        </div>`;

                            // Append the dropdown to the container
                            $('#variationOptionsContainer').append(variationDropdown);
                        });
                    },
                    error: function () {
                        alert('Error fetching variations');
                    }
                });
            } else {
                // Clear the variation options if no category is selected
                $('#variationOptionsContainer').empty();
            }
        });
    });
</script>
