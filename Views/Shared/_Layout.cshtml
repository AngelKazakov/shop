<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8"/>
    <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
    <title>@ViewData["Title"] - RandomShop</title>

    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css"/>
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true"/>
    <link rel="stylesheet" href="~/RandomShop.styles.css" asp-append-version="true"/>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css">

    <style>
        /* Nested dropdowns styling */
        .dropdown-menu .nested-dropdown:hover > .dropdown-menu {
            display: block;
            position: absolute;
            left: 100%;
            top: 0;
        }

        .dropdown-menu {
            position: relative;
        }

        .dropdown-menu .nested-dropdown {
            position: relative;
        }

        .dropdown-menu .nested-dropdown > .dropdown-menu {
            display: none;
        }

        .dropdown-menu .nested-dropdown:hover > .dropdown-menu {
            display: block;
        }
    </style>
</head>

<body>
<header>
    <nav class="navbar navbar-expand-sm navbar-light bg-white border-bottom box-shadow mb-3">
        <div class="container-fluid">
            <a class="navbar-brand" asp-area="" asp-controller="Home" asp-action="Index">RandomShop</a>

            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target=".navbar-collapse"
                    aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>

            <div class="navbar-collapse collapse d-sm-inline-flex justify-content-between align-items-center">
                <ul class="navbar-nav flex-grow-1 align-items-center">
                    <li class="nav-item">
                        <a class="nav-link text-dark" asp-area="" asp-controller="Home" asp-action="Index">Home</a>
                    </li>

                    <div class="dropdown">
                        <button class="btn btn-secondary dropdown-toggle" type="button" id="categoriesDropdown"
                                data-bs-toggle="dropdown" aria-expanded="false">
                            Categories
                        </button>
                        <div class="dropdown-menu" id="categoriesDropdownContent"></div>
                    </div>
                </ul>

                <!-- 🛒 Cart icon with live badge -->
                <div class="d-flex align-items-center me-3">
                    <a asp-controller="Cart" asp-action="ViewCart" class="nav-link position-relative">
                        <i class="fas fa-shopping-cart fa-lg"></i>
                        <span id="cartCountBadge"
                              class="position-absolute top-0 start-100 translate-middle badge rounded-pill bg-danger"
                              style="font-size: 0.75rem; display:none;">
                            0
                        </span>
                    </a>
                </div>

                <partial name="_LoginPartial"/>
            </div>
        </div>
    </nav>
</header>

<div class="container">
    <main role="main" class="pb-3">
        @RenderBody()
    </main>
</div>

<footer class="border-top footer text-muted">
    <div class="container">
        &copy; 2023 - RandomShop - <a asp-area="" asp-controller="Home" asp-action="Privacy">Privacy</a>
    </div>
</footer>

<script src="~/lib/jquery/dist/jquery.min.js"></script>
<script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
<script src="~/js/site.js" asp-append-version="true"></script>

<script>
    // Load dynamic categories dropdown
    document.getElementById("categoriesDropdown").addEventListener("mouseenter", function () {
        fetch('/Category/MainCategories')
            .then(response => response.json())
            .then(categories => {
                const dropdownContent = document.getElementById("categoriesDropdownContent");
                dropdownContent.innerHTML = '';

                categories.forEach(category => {
                    const mainCategoryItem = document.createElement("a");
                    mainCategoryItem.className = "dropdown-item nested-dropdown";
                    mainCategoryItem.href = `/Product/GetByCategory/${category.id}`;
                    mainCategoryItem.textContent = category.name;

                    if (category.subCategories && category.subCategories.length > 0) {
                        const subMenu = document.createElement("div");
                        subMenu.className = "dropdown-menu";
                        mainCategoryItem.appendChild(subMenu);

                        category.subCategories.forEach(subCategory => {
                            const subCategoryLink = document.createElement("a");
                            subCategoryLink.className = "dropdown-item";
                            subCategoryLink.href = `/Product/GetByCategory/${subCategory.id}`;
                            subCategoryLink.textContent = subCategory.name;
                            subMenu.appendChild(subCategoryLink);
                        });
                    }

                    dropdownContent.appendChild(mainCategoryItem);
                });
            })
            .catch(error => console.error('Error loading categories:', error));
    });

    // Update cart badge (both guest and logged-in users)
    async function updateCartBadge() {
        try {
            const response = await fetch('/Cart/GetCartCount');
            if (!response.ok) return;

            const data = await response.json();
            const badge = document.getElementById('cartCountBadge');

            badge.textContent = data.count;
            badge.style.display = data.count > 0 ? 'inline' : 'none';
        } catch (err) {
            console.error('Error updating cart badge:', err);
        }
    }

    document.addEventListener('DOMContentLoaded', updateCartBadge);
</script>

@await RenderSectionAsync("Scripts", required: false)
</body>
</html>
